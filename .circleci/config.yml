default: &defaults
  docker:
    - image: circleci/ruby:2.5.3-node-browsers
      environment:
        PGHOST: localhost
        PGUSER: postgres
        RAILS_ENV: test
        CC_TEST_REPORTER_ID: 6517820d40f8ad946236e58030894a76eea0bd3309d9b0b3f92a55abfa546476
    - image: postgres:9.5
      environment:
        POSTGRES_USER: postgres
        POSTGRES_DB: iSale_backend_test
        POSTGRES_PASSWORD: ""

  working_directory: ~/iSale_backend

# Restore Cached Dependencies
cmd_restore_cache: &cmd_restore_cache
  restore_cache:
      keys:
      - iSale_backend_test-{{ checksum "Gemfile.lock" }}

# Bundle install dependencies
cmd_install_dependencies: &cmd_install_dependencies
  run:
    name: Install dependencies
    command: |
      echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
      source $BASH_ENV
      gem install bundler
      bundle install --path vendor/bundle
# Cache Dependencies
cmd_save_cache: &cmd_save_cache
  save_cache:
    key: iSale_backend_test-{{ checksum "Gemfile.lock" }}
    paths:
      - vendor/bundle

# Wait for DB
cmd_wait_for_postgres: &cmd_wait_for_postgres
  run:
    name: Waiting for Postgres to be ready
    command: |
      dockerize -wait tcp://localhost:5432 -timeout 1m
cmd_attach_workspace: &cmd_attach_workspace
  attach_workspace:
    at: ~/iSale_backend_test

cmd_download_cc_test_reporter: &cmd_download_cc_test_reporter
  run:
    name:  Download cc-test-reporter
    command: |
      mkdir -p tmp/
      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /tmp/cc-test-reporter
      chmod +x /tmp/cc-test-reporter
version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - *cmd_restore_cache
      - *cmd_install_dependencies
      - *cmd_save_cache
      - *cmd_wait_for_postgres
      - run:
          name: Database setup
          command: |
             
             bundle exec rake db:create
             bundle exec rake db:migrate
             bundle exec rake db:schema:load --trace
  test_and_report:
    <<: *defaults
    steps:
      - checkout
      - *cmd_restore_cache
      - *cmd_install_dependencies
      - *cmd_save_cache
      - *cmd_wait_for_postgres
      - *cmd_download_cc_test_reporter

      - run:
          name: Run tests
          command: |
            /tmp/cc-test-reporter before-build
            RUN_COVERAGE=true bundle exec rspec
            
      - store_artifacts:
          path: coverage

      - run:
          name: Generate coverage files
          command: |
            ls
            /tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.backend.json /coverage
            /tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.backend.json
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test_and_report:
          requires:
            - build
